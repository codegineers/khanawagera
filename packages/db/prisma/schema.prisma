generator client {
  provider      = "prisma-client-js"
  output        = "../prisma-client"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = ""
}

model Cuisine {
  id   String @id @default(cuid())
  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  restaurantCuisines RestaurantCuisine[]
}

model Dish {
  id   String @id @default(cuid())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoryId String
}

model Menu {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  restaurantId String

  categories Category[]
}

model Category {
  id   String @id @default(cuid())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  menu   Menu   @relation(fields: [menuId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  menuId String
  dishes Dish[]
}

model Restaurant {
  id      String  @id @default(cuid())
  name    String
  address String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  menus              Menu[]
  restaurantCuisines RestaurantCuisine[]
}

model RestaurantCuisine {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cuisineId    String
  restaurantId String
  cuisine      Cuisine    @relation(fields: [cuisineId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
